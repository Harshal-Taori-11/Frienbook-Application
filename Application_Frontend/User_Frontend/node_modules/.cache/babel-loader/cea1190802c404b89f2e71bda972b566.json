{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Harshal Taori\\\\Documents\\\\MFPE PROJECT\\\\26  TUESDAY\\\\friendbook-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Harshal Taori\\\\Documents\\\\MFPE PROJECT\\\\26  TUESDAY\\\\friendbook-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { API_URL } from '../../Constants';\nexport var USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\n\nvar AuthenticationService = /*#__PURE__*/function () {\n  function AuthenticationService() {\n    _classCallCheck(this, AuthenticationService);\n  }\n\n  _createClass(AuthenticationService, [{\n    key: \"executeBasicAuthenticationService\",\n    value: function executeBasicAuthenticationService(username, password) {\n      return axios.get(\"\".concat(API_URL, \"/basicauth\"), {\n        headers: {\n          authorization: this.createBasicAuthToken(username, password)\n        }\n      });\n    }\n  }, {\n    key: \"executeJwtAuthenticationService\",\n    value: function executeJwtAuthenticationService(username, password) {\n      return axios.post(\"\".concat(API_URL, \"/authenticate\"), {\n        // return axios.post(`http://localhost:8083/jpa/authenticate`, {\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: \"registerNewAccount\",\n    value: function registerNewAccount(username, password) {\n      return axios.post(\"\".concat(API_URL, \"/register\"), {\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: \"createBasicAuthToken\",\n    value: function createBasicAuthToken(username, password) {\n      return 'Basic ' + window.btoa(username + \":\" + password);\n    }\n  }, {\n    key: \"registerSuccessfulLogin\",\n    value: function registerSuccessfulLogin(username, password) {\n      sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n      this.setupAxiosInterceptors(this.createBasicAuthToken(username, password));\n    }\n  }, {\n    key: \"registerSuccessfulLoginForJwt\",\n    value: function registerSuccessfulLoginForJwt(username, token) {\n      sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n      this.setupAxiosInterceptors(this.createJWTToken(token));\n    }\n  }, {\n    key: \"createJWTToken\",\n    value: function createJWTToken(token) {\n      sessionStorage.setItem(\"USER_TOKEN\", \"Bearer \" + token);\n      return 'Bearer ' + token;\n    } //DO SESSION MEMORY CLEANUP HERE...before logout\n\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    }\n  }, {\n    key: \"isUserLoggedIn\",\n    value: function isUserLoggedIn() {\n      var user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n      if (user === null) return false;\n      return true;\n    }\n  }, {\n    key: \"getLoggedInUserName\",\n    value: function getLoggedInUserName() {\n      var user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n      if (user === null) return '';\n      return user;\n    }\n  }, {\n    key: \"setupAxiosInterceptors\",\n    value: function setupAxiosInterceptors(token) {\n      var _this = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this.isUserLoggedIn()) {\n          config.headers.authorization = token;\n        }\n\n        return config;\n      });\n    }\n  }]);\n\n  return AuthenticationService;\n}();\n\nexport default new AuthenticationService();","map":{"version":3,"names":["axios","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","AuthenticationService","username","password","get","headers","authorization","createBasicAuthToken","post","window","btoa","sessionStorage","setItem","setupAxiosInterceptors","token","createJWTToken","removeItem","user","getItem","interceptors","request","use","config","isUserLoggedIn"],"sources":["C:/Users/Harshal Taori/Documents/MFPE PROJECT/26  TUESDAY/friendbook-frontend/src/components/post/AuthenticationService.js"],"sourcesContent":["import axios from 'axios'\r\nimport { API_URL } from '../../Constants'\r\n\r\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\r\n\r\nclass AuthenticationService {\r\n\r\n    executeBasicAuthenticationService(username, password) {\r\n        return axios.get(`${API_URL}/basicauth`,\r\n            { headers: { authorization: this.createBasicAuthToken(username, password) } })\r\n    }\r\n\r\n    executeJwtAuthenticationService(username, password) {\r\n        return axios.post(`${API_URL}/authenticate`, {\r\n            // return axios.post(`http://localhost:8083/jpa/authenticate`, {\r\n            username,\r\n            password\r\n        })\r\n    }\r\n\r\n    registerNewAccount(username, password) {\r\n        return axios.post(`${API_URL}/register`, {\r\n            username,\r\n            password\r\n        })\r\n    }\r\n\r\n    createBasicAuthToken(username, password) {\r\n        return 'Basic ' + window.btoa(username + \":\" + password)\r\n    }\r\n\r\n    registerSuccessfulLogin(username, password) {\r\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\r\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username, password))\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(username, token) {\r\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\r\n        this.setupAxiosInterceptors(this.createJWTToken(token))\r\n    }\r\n\r\n    createJWTToken(token) {\r\n        sessionStorage.setItem(\"USER_TOKEN\", \"Bearer \" + token);\r\n        return 'Bearer ' + token\r\n    }\r\n\r\n\r\n    //DO SESSION MEMORY CLEANUP HERE...before logout\r\n    logout() {\r\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return false\r\n        return true\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return ''\r\n        return user\r\n    }\r\n\r\n    setupAxiosInterceptors(token) {\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = token\r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAO,IAAMC,gCAAgC,GAAG,mBAAzC;;IAEDC,qB;;;;;;;sDAEgCC,Q,EAAUC,Q,EAAU;MAClD,OAAOL,KAAK,CAACM,GAAN,WAAaL,OAAb,iBACH;QAAEM,OAAO,EAAE;UAAEC,aAAa,EAAE,KAAKC,oBAAL,CAA0BL,QAA1B,EAAoCC,QAApC;QAAjB;MAAX,CADG,CAAP;IAEH;;;oDAE+BD,Q,EAAUC,Q,EAAU;MAChD,OAAOL,KAAK,CAACU,IAAN,WAAcT,OAAd,oBAAsC;QACzC;QACAG,QAAQ,EAARA,QAFyC;QAGzCC,QAAQ,EAARA;MAHyC,CAAtC,CAAP;IAKH;;;uCAEkBD,Q,EAAUC,Q,EAAU;MACnC,OAAOL,KAAK,CAACU,IAAN,WAAcT,OAAd,gBAAkC;QACrCG,QAAQ,EAARA,QADqC;QAErCC,QAAQ,EAARA;MAFqC,CAAlC,CAAP;IAIH;;;yCAEoBD,Q,EAAUC,Q,EAAU;MACrC,OAAO,WAAWM,MAAM,CAACC,IAAP,CAAYR,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAlB;IACH;;;4CAEuBD,Q,EAAUC,Q,EAAU;MACxCQ,cAAc,CAACC,OAAf,CAAuBZ,gCAAvB,EAAyDE,QAAzD;MACA,KAAKW,sBAAL,CAA4B,KAAKN,oBAAL,CAA0BL,QAA1B,EAAoCC,QAApC,CAA5B;IACH;;;kDAE6BD,Q,EAAUY,K,EAAO;MAC3CH,cAAc,CAACC,OAAf,CAAuBZ,gCAAvB,EAAyDE,QAAzD;MACA,KAAKW,sBAAL,CAA4B,KAAKE,cAAL,CAAoBD,KAApB,CAA5B;IACH;;;mCAEcA,K,EAAO;MAClBH,cAAc,CAACC,OAAf,CAAuB,YAAvB,EAAqC,YAAYE,KAAjD;MACA,OAAO,YAAYA,KAAnB;IACH,C,CAGD;;;;6BACS;MACLH,cAAc,CAACK,UAAf,CAA0BhB,gCAA1B;IACH;;;qCAEgB;MACb,IAAIiB,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuBlB,gCAAvB,CAAX;MACA,IAAIiB,IAAI,KAAK,IAAb,EAAmB,OAAO,KAAP;MACnB,OAAO,IAAP;IACH;;;0CAEqB;MAClB,IAAIA,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuBlB,gCAAvB,CAAX;MACA,IAAIiB,IAAI,KAAK,IAAb,EAAmB,OAAO,EAAP;MACnB,OAAOA,IAAP;IACH;;;2CAEsBH,K,EAAO;MAAA;;MAC1BhB,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAACC,MAAD,EAAY;QACR,IAAI,KAAI,CAACC,cAAL,EAAJ,EAA2B;UACvBD,MAAM,CAACjB,OAAP,CAAeC,aAAf,GAA+BQ,KAA/B;QACH;;QACD,OAAOQ,MAAP;MACH,CANL;IAQH;;;;;;AAGL,eAAe,IAAIrB,qBAAJ,EAAf"},"metadata":{},"sourceType":"module"}