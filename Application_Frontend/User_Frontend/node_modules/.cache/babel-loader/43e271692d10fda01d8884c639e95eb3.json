{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Harshal Taori\\\\Documents\\\\MFPE PROJECT\\\\26  TUESDAY\\\\friendbook-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Harshal Taori\\\\Documents\\\\MFPE PROJECT\\\\26  TUESDAY\\\\friendbook-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport { API_URL, GATEWAY_JPA_API_URL, JPA_API_URL } from '../../Constants';\n\nvar AccountProfileService = /*#__PURE__*/function () {\n  function AccountProfileService() {\n    _classCallCheck(this, AccountProfileService);\n  }\n\n  _createClass(AccountProfileService, [{\n    key: \"retrieveInfo\",\n    value: function retrieveInfo(name) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/profile\"));\n    }\n  }, {\n    key: \"retrieveDetails\",\n    value: function retrieveDetails(name) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/profile/details\"));\n    }\n  }, {\n    key: \"retrieveAllInfo\",\n    value: function retrieveAllInfo() {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/all/profile\"));\n    }\n  }, {\n    key: \"deleteInfo\",\n    value: function deleteInfo(name, id) {\n      return axios.delete(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/profile/\").concat(id));\n    }\n  }, {\n    key: \"updateInfo\",\n    value: function updateInfo(name, id, profile) {\n      return axios.put(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/profile/\").concat(id), profile);\n    }\n  }, {\n    key: \"updateDetails\",\n    value: function updateDetails(username, firstname, lastname, email, phonenumber, aboutme) {\n      return axios.post(\"http://localhost:8080/updateProfile\", {\n        // returnos axios.post(`http://localhost:8083/updateProfile`, {\n        username: username,\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        phonenumber: phonenumber,\n        aboutme: aboutme\n      });\n    }\n  }, {\n    key: \"checkDuplicateUsername\",\n    value: function checkDuplicateUsername(username) {\n      if (username != null) {\n        return axios.get(\"\".concat(JPA_API_URL, \"/checkuser/username/\").concat(username));\n      }\n    }\n  }, {\n    key: \"checkDuplicateStudentnumber\",\n    value: function checkDuplicateStudentnumber(studentnumber) {\n      if (studentnumber != null) {\n        return axios.get(\"\".concat(JPA_API_URL, \"/checkuser/studentnumber/\").concat(studentnumber));\n      }\n    }\n  }, {\n    key: \"checkDuplicateEmail\",\n    value: function checkDuplicateEmail(email) {\n      if (email != null) {\n        return axios.get(\"\".concat(JPA_API_URL, \"/checkuser/email/\").concat(email));\n      }\n    }\n  }, {\n    key: \"checkDuplicatePhonenumber\",\n    value: function checkDuplicatePhonenumber(phonenumber) {\n      if (phonenumber != null) {\n        return axios.get(\"\".concat(JPA_API_URL, \"/checkuser/phonenumber/\").concat(phonenumber)); // return axios.get(`http://localhost:8083/checkuser/phonenumber/${phonenumber}`);\n      }\n    }\n  }, {\n    key: \"createInfo\",\n    value: function createInfo(name, profile) {\n      return axios.post(\"\".concat(JPA_API_URL, \"/users/\").concat(name, \"/profile/\"), profile);\n    }\n  }, {\n    key: \"uploadAvatar\",\n    value: function uploadAvatar(file, username) {\n      var formData = new FormData();\n      formData.set(\"file\", file);\n      return axios.post(\"\".concat(JPA_API_URL, \"/uploadAvatar/\").concat(username), formData, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      });\n    }\n  }, {\n    key: \"uploadBackground\",\n    value: function uploadBackground(file, username) {\n      var formData = new FormData();\n      formData.set(\"file\", file);\n      return axios.post(\"\".concat(JPA_API_URL, \"/uploadBackground/\").concat(username), formData, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      });\n    }\n  }, {\n    key: \"getAvatarLink\",\n    value: function getAvatarLink(username) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(username, \"/profile/avatar\"));\n    }\n  }, {\n    key: \"getBackgroundLink\",\n    value: function getBackgroundLink(username) {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\").concat(username, \"/profile/background\"));\n    }\n  }, {\n    key: \"getAllUser\",\n    value: function getAllUser() {\n      return axios.get(\"\".concat(JPA_API_URL, \"/users/\"));\n    }\n  }, {\n    key: \"getFollowingUsers\",\n    value: function getFollowingUsers(username) {\n      return axios.get(\"\".concat(GATEWAY_JPA_API_URL, \"/\").concat(username, \"/following\"));\n    }\n  }, {\n    key: \"addFollowers\",\n    value: function addFollowers(user, toFollow) {\n      return axios.put(\"\".concat(GATEWAY_JPA_API_URL, \"/user/\").concat(user, \"/followuser/\").concat(toFollow));\n    }\n  }, {\n    key: \"removeFollower\",\n    value: function removeFollower(user, toUnFollow) {\n      return axios.put(\"\".concat(GATEWAY_JPA_API_URL, \"/user/\").concat(user, \"/unfollowuser/\").concat(toUnFollow));\n    }\n  }]);\n\n  return AccountProfileService;\n}();\n\nexport default new AccountProfileService();","map":{"version":3,"names":["axios","API_URL","GATEWAY_JPA_API_URL","JPA_API_URL","AccountProfileService","name","get","id","delete","profile","put","username","firstname","lastname","email","phonenumber","aboutme","post","studentnumber","file","formData","FormData","set","headers","user","toFollow","toUnFollow"],"sources":["C:/Users/Harshal Taori/Documents/MFPE PROJECT/26  TUESDAY/friendbook-frontend/src/api/main/AccountProfileService.js"],"sourcesContent":["import axios from 'axios'\r\nimport { API_URL, GATEWAY_JPA_API_URL, JPA_API_URL } from '../../Constants'\r\n\r\nclass AccountProfileService {\r\n\r\n    retrieveInfo(name) {\r\n        return axios.get(`${JPA_API_URL}/users/${name}/profile`);\r\n    }\r\n\r\n    retrieveDetails(name) {\r\n        return axios.get(`${JPA_API_URL}/users/${name}/profile/details`);\r\n    }\r\n\r\n    retrieveAllInfo() {\r\n        return axios.get(`${JPA_API_URL}/users/all/profile`);\r\n    }\r\n\r\n    deleteInfo(name, id) {\r\n        return axios.delete(`${JPA_API_URL}/users/${name}/profile/${id}`);\r\n    }\r\n\r\n    updateInfo(name, id, profile) {\r\n        return axios.put(`${JPA_API_URL}/users/${name}/profile/${id}`, profile);\r\n    }\r\n\r\n    updateDetails(username, firstname, lastname, email, phonenumber, aboutme) {\r\n        return axios.post(`http://localhost:8080/updateProfile`, {\r\n            // returnos axios.post(`http://localhost:8083/updateProfile`, {\r\n            username,\r\n            firstname,\r\n            lastname,\r\n            email,\r\n            phonenumber,\r\n            aboutme\r\n        })\r\n    }\r\n\r\n    checkDuplicateUsername(username) {\r\n        if (username != null) {\r\n            return axios.get(`${JPA_API_URL}/checkuser/username/${username}`);\r\n        }\r\n    }\r\n\r\n    checkDuplicateStudentnumber(studentnumber) {\r\n        if (studentnumber != null) {\r\n            return axios.get(`${JPA_API_URL}/checkuser/studentnumber/${studentnumber}`);\r\n        }\r\n    }\r\n\r\n    checkDuplicateEmail(email) {\r\n        if (email != null) {\r\n            return axios.get(`${JPA_API_URL}/checkuser/email/${email}`);\r\n        }\r\n    }\r\n\r\n    checkDuplicatePhonenumber(phonenumber) {\r\n        if (phonenumber != null) {\r\n            return axios.get(`${JPA_API_URL}/checkuser/phonenumber/${phonenumber}`);\r\n            // return axios.get(`http://localhost:8083/checkuser/phonenumber/${phonenumber}`);\r\n        }\r\n    }\r\n\r\n\r\n    createInfo(name, profile) {\r\n        return axios.post(`${JPA_API_URL}/users/${name}/profile/`, profile);\r\n    }\r\n\r\n\r\n    uploadAvatar(file, username) {\r\n        const formData = new FormData();\r\n        formData.set(\"file\", file);\r\n        return axios.post(`${JPA_API_URL}/uploadAvatar/${username}`,formData,\r\n        {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            },\r\n        });\r\n    }\r\n    \r\n    \r\n    uploadBackground(file, username) {\r\n        const formData = new FormData();\r\n        formData.set(\"file\", file);\r\n        return axios.post(`${JPA_API_URL}/uploadBackground/${username}`,formData,\r\n        {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            },\r\n        });\r\n    }\r\n\r\n\r\n    getAvatarLink(username){\r\n        return axios.get(`${JPA_API_URL}/users/${username}/profile/avatar`);\r\n    }\r\n\r\n    getBackgroundLink(username){\r\n        return axios.get(`${JPA_API_URL}/users/${username}/profile/background`);\r\n    }\r\n    getAllUser() {\r\n        return axios.get(`${JPA_API_URL}/users/`);\r\n    }\r\n\r\n    getFollowingUsers(username){\r\n        return axios.get(`${GATEWAY_JPA_API_URL}/${username}/following`);\r\n    }\r\n\r\n    addFollowers(user,toFollow){\r\n        return axios.put(`${GATEWAY_JPA_API_URL}/user/${user}/followuser/${toFollow}`);\r\n    }\r\n\r\n    removeFollower(user, toUnFollow){\r\n        return axios.put(`${GATEWAY_JPA_API_URL}/user/${user}/unfollowuser/${toUnFollow}`);\r\n    }\r\n\r\n}\r\n\r\nexport default new AccountProfileService()"],"mappings":"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"},"metadata":{},"sourceType":"module"}